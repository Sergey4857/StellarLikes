{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\StellarLikes\\\\src\\\\components\\\\CouponButton\\\\CouponButton.jsx\",\n  _s = $RefreshSig$();\n// CouponButton.jsx\nimport React, { useState } from 'react';\nimport css from './CouponButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CouponButton = _ref => {\n  _s();\n  let {\n    couponCode,\n    price,\n    quantity,\n    setCouponError,\n    handleCouponApplied,\n    fetchCoupons\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const applyCoupon = async () => {\n    try {\n      setLoading(true);\n      setCouponError(null);\n      const response = await fetchCoupons(); // Вызываем переданную функцию\n      const coupons = response.data;\n      const matchedCoupon = coupons.find(coupon => coupon.code.toLowerCase() === couponCode.toLowerCase());\n      if (!matchedCoupon) {\n        setCouponError('Coupon code not found.');\n        return;\n      }\n      if (matchedCoupon.date_expires) {\n        const currentDate = new Date();\n        const expiryDate = new Date(matchedCoupon.date_expires);\n        if (currentDate > expiryDate) {\n          setCouponError('Coupon has expired.');\n          return;\n        }\n      }\n      if (matchedCoupon.usage_limit !== null && matchedCoupon.usage_count >= matchedCoupon.usage_limit) {\n        setCouponError('Coupon usage limit has been reached.');\n        return;\n      }\n      let discountAmount = 0;\n      const couponAmount = parseFloat(matchedCoupon.amount) || 0;\n      switch (matchedCoupon.discount_type) {\n        case 'percent':\n          discountAmount = price * (couponAmount / 100);\n          break;\n        case 'fixed_cart':\n          discountAmount = couponAmount;\n          break;\n        case 'fixed_product':\n          discountAmount = couponAmount * quantity;\n          break;\n        default:\n          setCouponError('Unsupported coupon type.');\n          return;\n      }\n      discountAmount = Math.min(discountAmount, price);\n      handleCouponApplied(discountAmount, matchedCoupon.code);\n    } catch (error) {\n      console.error('Error fetching coupons:', error);\n      setCouponError('An error occurred while applying the coupon.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: css.couponSbmt,\n    type: \"button\",\n    onClick: applyCoupon,\n    disabled: loading || !couponCode,\n    children: loading ? 'Loading...' : 'Apply'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CouponButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = CouponButton;\nexport default CouponButton;\nvar _c;\n$RefreshReg$(_c, \"CouponButton\");","map":{"version":3,"names":["React","useState","css","jsxDEV","_jsxDEV","CouponButton","_ref","_s","couponCode","price","quantity","setCouponError","handleCouponApplied","fetchCoupons","loading","setLoading","applyCoupon","response","coupons","data","matchedCoupon","find","coupon","code","toLowerCase","date_expires","currentDate","Date","expiryDate","usage_limit","usage_count","discountAmount","couponAmount","parseFloat","amount","discount_type","Math","min","error","console","className","couponSbmt","type","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/StellarLikes/src/components/CouponButton/CouponButton.jsx"],"sourcesContent":["// CouponButton.jsx\r\nimport React, { useState } from 'react';\r\nimport css from './CouponButton.module.css';\r\n\r\nconst CouponButton = ({\r\n  couponCode,\r\n  price,\r\n  quantity,\r\n  setCouponError,\r\n  handleCouponApplied,\r\n  fetchCoupons,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const applyCoupon = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setCouponError(null);\r\n\r\n      const response = await fetchCoupons(); // Вызываем переданную функцию\r\n      const coupons = response.data;\r\n\r\n      const matchedCoupon = coupons.find(\r\n        coupon => coupon.code.toLowerCase() === couponCode.toLowerCase()\r\n      );\r\n\r\n      if (!matchedCoupon) {\r\n        setCouponError('Coupon code not found.');\r\n        return;\r\n      }\r\n\r\n      if (matchedCoupon.date_expires) {\r\n        const currentDate = new Date();\r\n        const expiryDate = new Date(matchedCoupon.date_expires);\r\n        if (currentDate > expiryDate) {\r\n          setCouponError('Coupon has expired.');\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (\r\n        matchedCoupon.usage_limit !== null &&\r\n        matchedCoupon.usage_count >= matchedCoupon.usage_limit\r\n      ) {\r\n        setCouponError('Coupon usage limit has been reached.');\r\n        return;\r\n      }\r\n\r\n      let discountAmount = 0;\r\n      const couponAmount = parseFloat(matchedCoupon.amount) || 0;\r\n\r\n      switch (matchedCoupon.discount_type) {\r\n        case 'percent':\r\n          discountAmount = price * (couponAmount / 100);\r\n          break;\r\n        case 'fixed_cart':\r\n          discountAmount = couponAmount;\r\n          break;\r\n        case 'fixed_product':\r\n          discountAmount = couponAmount * quantity;\r\n          break;\r\n        default:\r\n          setCouponError('Unsupported coupon type.');\r\n          return;\r\n      }\r\n\r\n      discountAmount = Math.min(discountAmount, price);\r\n\r\n      handleCouponApplied(discountAmount, matchedCoupon.code);\r\n    } catch (error) {\r\n      console.error('Error fetching coupons:', error);\r\n      setCouponError('An error occurred while applying the coupon.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={css.couponSbmt}\r\n      type=\"button\"\r\n      onClick={applyCoupon}\r\n      disabled={loading || !couponCode}\r\n    >\r\n      {loading ? 'Loading...' : 'Apply'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CouponButton;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGC,IAAA,IAOf;EAAAC,EAAA;EAAA,IAPgB;IACpBC,UAAU;IACVC,KAAK;IACLC,QAAQ;IACRC,cAAc;IACdC,mBAAmB;IACnBC;EACF,CAAC,GAAAP,IAAA;EACC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChBJ,cAAc,CAAC,IAAI,CAAC;MAEpB,MAAMM,QAAQ,GAAG,MAAMJ,YAAY,CAAC,CAAC,CAAC,CAAC;MACvC,MAAMK,OAAO,GAAGD,QAAQ,CAACE,IAAI;MAE7B,MAAMC,aAAa,GAAGF,OAAO,CAACG,IAAI,CAChCC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKhB,UAAU,CAACgB,WAAW,CAAC,CACjE,CAAC;MAED,IAAI,CAACJ,aAAa,EAAE;QAClBT,cAAc,CAAC,wBAAwB,CAAC;QACxC;MACF;MAEA,IAAIS,aAAa,CAACK,YAAY,EAAE;QAC9B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;QAC9B,MAAMC,UAAU,GAAG,IAAID,IAAI,CAACP,aAAa,CAACK,YAAY,CAAC;QACvD,IAAIC,WAAW,GAAGE,UAAU,EAAE;UAC5BjB,cAAc,CAAC,qBAAqB,CAAC;UACrC;QACF;MACF;MAEA,IACES,aAAa,CAACS,WAAW,KAAK,IAAI,IAClCT,aAAa,CAACU,WAAW,IAAIV,aAAa,CAACS,WAAW,EACtD;QACAlB,cAAc,CAAC,sCAAsC,CAAC;QACtD;MACF;MAEA,IAAIoB,cAAc,GAAG,CAAC;MACtB,MAAMC,YAAY,GAAGC,UAAU,CAACb,aAAa,CAACc,MAAM,CAAC,IAAI,CAAC;MAE1D,QAAQd,aAAa,CAACe,aAAa;QACjC,KAAK,SAAS;UACZJ,cAAc,GAAGtB,KAAK,IAAIuB,YAAY,GAAG,GAAG,CAAC;UAC7C;QACF,KAAK,YAAY;UACfD,cAAc,GAAGC,YAAY;UAC7B;QACF,KAAK,eAAe;UAClBD,cAAc,GAAGC,YAAY,GAAGtB,QAAQ;UACxC;QACF;UACEC,cAAc,CAAC,0BAA0B,CAAC;UAC1C;MACJ;MAEAoB,cAAc,GAAGK,IAAI,CAACC,GAAG,CAACN,cAAc,EAAEtB,KAAK,CAAC;MAEhDG,mBAAmB,CAACmB,cAAc,EAAEX,aAAa,CAACG,IAAI,CAAC;IACzD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C3B,cAAc,CAAC,8CAA8C,CAAC;IAChE,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IACEoC,SAAS,EAAEtC,GAAG,CAACuC,UAAW;IAC1BC,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAE3B,WAAY;IACrB4B,QAAQ,EAAE9B,OAAO,IAAI,CAACN,UAAW;IAAAqC,QAAA,EAEhC/B,OAAO,GAAG,YAAY,GAAG;EAAO;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEb,CAAC;AAAC1C,EAAA,CAnFIF,YAAY;AAAA6C,EAAA,GAAZ7C,YAAY;AAqFlB,eAAeA,YAAY;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}