{"ast":null,"code":"var _jsxFileName = \"D:\\\\StellarLikes\\\\src\\\\components\\\\CustomQuantiy\\\\CustomQuantity.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport css from './CustomQuantity.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomQuantity = _ref => {\n  _s();\n  let {\n    discountLevels,\n    basePricePerUnit,\n    onQuantityChange,\n    customPrice,\n    customQuantity,\n    blockColor,\n    textColor,\n    discountColor\n  } = _ref;\n  const [quantity, setQuantity] = useState(customQuantity || 100);\n  const [inputValue, setInputValue] = useState(customQuantity || 100); // Для отображения ввода\n  const [discountPercent, setDiscountPercent] = useState(0);\n  const [nextDiscountQuantity, setNextDiscountQuantity] = useState(null);\n  const [nextDiscountPercent, setNextDiscountPercent] = useState(null);\n  useEffect(() => {\n    onQuantityChange(quantity);\n    let applicableDiscount = 0;\n    for (let i = discountLevels.length - 1; i >= 0; i--) {\n      if (quantity >= discountLevels[i].quantity) {\n        applicableDiscount = discountLevels[i].discount;\n        break;\n      }\n    }\n    setDiscountPercent(applicableDiscount);\n    let nextLevel = null;\n    for (let i = 0; i < discountLevels.length; i++) {\n      if (quantity < discountLevels[i].quantity) {\n        nextLevel = discountLevels[i];\n        break;\n      }\n    }\n    if (nextLevel) {\n      setNextDiscountQuantity(nextLevel.quantity - quantity);\n      setNextDiscountPercent(nextLevel.discount);\n    } else {\n      setNextDiscountQuantity(null);\n      setNextDiscountPercent(null);\n    }\n  }, [quantity, discountLevels, onQuantityChange]);\n  const handleInputChange = e => {\n    let value = e.target.value;\n    setInputValue(value); // Позволяем пользователю вводить любое число\n  };\n\n  const handleBlur = () => {\n    let value = parseInt(inputValue, 10);\n    if (!isNaN(value) && value >= 100 && value <= 20000) {\n      setQuantity(value);\n    } else if (value < 100) {\n      setQuantity(100);\n      setInputValue(100);\n    } else if (value > 20000) {\n      setQuantity(20000);\n      setInputValue(20000);\n    } else {\n      setInputValue(quantity); // Возвращаем текущее значение, если некорректный ввод\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.customQuantitySection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${css[blockColor]} ${css.customAmountBlock}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.customAmountTitle,\n          children: \"Your Custom Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: css.customAmountInput,\n          type: \"number\",\n          placeholder: \"Tap Here\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onBlur: handleBlur,\n          min: \"100\",\n          max: \"20000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.customDiscountBlock,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${css[textColor]} ${css.customDiscountTitle}`,\n          children: \"Your Discount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${css[discountColor]} ${css.customDiscountPercent}`,\n          children: [discountPercent, \"% off\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(CustomQuantity, \"xfUqbf75Lim1KxRo8UhyUcM8IwI=\");\n_c = CustomQuantity;\nexport default CustomQuantity;\nvar _c;\n$RefreshReg$(_c, \"CustomQuantity\");","map":{"version":3,"names":["React","useState","useEffect","css","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomQuantity","_ref","_s","discountLevels","basePricePerUnit","onQuantityChange","customPrice","customQuantity","blockColor","textColor","discountColor","quantity","setQuantity","inputValue","setInputValue","discountPercent","setDiscountPercent","nextDiscountQuantity","setNextDiscountQuantity","nextDiscountPercent","setNextDiscountPercent","applicableDiscount","i","length","discount","nextLevel","handleInputChange","e","value","target","handleBlur","parseInt","isNaN","children","className","customQuantitySection","customAmountBlock","customAmountTitle","fileName","_jsxFileName","lineNumber","columnNumber","customAmountInput","type","placeholder","onChange","onBlur","min","max","customDiscountBlock","customDiscountTitle","customDiscountPercent","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/components/CustomQuantiy/CustomQuantity.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport css from './CustomQuantity.module.css';\r\n\r\nconst CustomQuantity = ({\r\n  discountLevels,\r\n  basePricePerUnit,\r\n  onQuantityChange,\r\n  customPrice,\r\n  customQuantity,\r\n  blockColor,\r\n  textColor,\r\n  discountColor,\r\n}) => {\r\n  const [quantity, setQuantity] = useState(customQuantity || 100);\r\n  const [inputValue, setInputValue] = useState(customQuantity || 100); // Для отображения ввода\r\n  const [discountPercent, setDiscountPercent] = useState(0);\r\n  const [nextDiscountQuantity, setNextDiscountQuantity] = useState(null);\r\n  const [nextDiscountPercent, setNextDiscountPercent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onQuantityChange(quantity);\r\n\r\n    let applicableDiscount = 0;\r\n    for (let i = discountLevels.length - 1; i >= 0; i--) {\r\n      if (quantity >= discountLevels[i].quantity) {\r\n        applicableDiscount = discountLevels[i].discount;\r\n        break;\r\n      }\r\n    }\r\n    setDiscountPercent(applicableDiscount);\r\n\r\n    let nextLevel = null;\r\n    for (let i = 0; i < discountLevels.length; i++) {\r\n      if (quantity < discountLevels[i].quantity) {\r\n        nextLevel = discountLevels[i];\r\n        break;\r\n      }\r\n    }\r\n    if (nextLevel) {\r\n      setNextDiscountQuantity(nextLevel.quantity - quantity);\r\n      setNextDiscountPercent(nextLevel.discount);\r\n    } else {\r\n      setNextDiscountQuantity(null);\r\n      setNextDiscountPercent(null);\r\n    }\r\n  }, [quantity, discountLevels, onQuantityChange]);\r\n\r\n  const handleInputChange = e => {\r\n    let value = e.target.value;\r\n    setInputValue(value); // Позволяем пользователю вводить любое число\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    let value = parseInt(inputValue, 10);\r\n    if (!isNaN(value) && value >= 100 && value <= 20000) {\r\n      setQuantity(value);\r\n    } else if (value < 100) {\r\n      setQuantity(100);\r\n      setInputValue(100);\r\n    } else if (value > 20000) {\r\n      setQuantity(20000);\r\n      setInputValue(20000);\r\n    } else {\r\n      setInputValue(quantity); // Возвращаем текущее значение, если некорректный ввод\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={css.customQuantitySection}>\r\n        <div className={`${css[blockColor]} ${css.customAmountBlock}`}>\r\n          <div className={css.customAmountTitle}>Your Custom Amount</div>\r\n          <input\r\n            className={css.customAmountInput}\r\n            type=\"number\"\r\n            placeholder=\"Tap Here\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            min=\"100\"\r\n            max=\"20000\"\r\n          />\r\n        </div>\r\n        <div className={css.customDiscountBlock}>\r\n          <div className={`${css[textColor]} ${css.customDiscountTitle}`}>\r\n            Your Discount\r\n          </div>\r\n          <div className={`${css[discountColor]} ${css.customDiscountPercent}`}>\r\n            {discountPercent}% off\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomQuantity;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}