{"ast":null,"code":"import axios from 'axios';\nconst instagramPostsUrl = process.env.REACT_APP_INSTAGRAM_POSTS_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst FetchUserTiktokPosts = async (id, setTikTokPosts) => {\n  try {\n    console.log(id);\n    const response = await axios.get(API_KEY, {\n      params: {\n        unique_id: id,\n        count: 9,\n        cursor: 0\n      },\n      headers: {\n        'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com',\n        'x-rapidapi-key': API_KEY\n      }\n    });\n    if (response.status === 200) {\n      const info = response.data;\n      if (response.data.videos) {\n        const originalArray = info.data.videos;\n        let newArray = [];\n        if (!originalArray || !Array.isArray(originalArray)) {\n          return 'Data error';\n        }\n        originalArray.forEach(item => {\n          const newItem = {\n            display_url: item.video_id,\n            shortcode: item.author.unique_id,\n            thumbnail_resources: item.cover,\n            local_image_path: item.cover\n          };\n          newArray.push(newItem);\n        });\n        setTikTokPosts(newArray);\n        return newArray;\n      } else {\n        console.error('getTtPosts:', id);\n        return 'Data error';\n      }\n    } else {\n      return response.status;\n    }\n  } catch (error) {\n    console.error('Error fetching TikTok posts:', error);\n    return 'Error';\n  }\n};\n_c = FetchUserTiktokPosts;\nexport default FetchUserTiktokPosts;\nvar _c;\n$RefreshReg$(_c, \"FetchUserTiktokPosts\");","map":{"version":3,"names":["axios","instagramPostsUrl","process","env","REACT_APP_INSTAGRAM_POSTS_URL","API_KEY","REACT_APP_API_KEY","FetchUserTiktokPosts","id","setTikTokPosts","console","log","response","get","params","unique_id","count","cursor","headers","status","info","data","videos","originalArray","newArray","Array","isArray","forEach","item","newItem","display_url","video_id","shortcode","author","thumbnail_resources","cover","local_image_path","push","error","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/Api/FetchUserTikTokPosts.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instagramPostsUrl = process.env.REACT_APP_INSTAGRAM_POSTS_URL;\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst FetchUserTiktokPosts = async (id, setTikTokPosts) => {\r\n  try {\r\n    console.log(id);\r\n\r\n    const response = await axios.get(API_KEY, {\r\n      params: {\r\n        unique_id: id,\r\n        count: 9,\r\n        cursor: 0,\r\n      },\r\n      headers: {\r\n        'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com',\r\n        'x-rapidapi-key': API_KEY,\r\n      },\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      const info = response.data;\r\n\r\n      if (response.data.videos) {\r\n        const originalArray = info.data.videos;\r\n        let newArray = [];\r\n\r\n        if (!originalArray || !Array.isArray(originalArray)) {\r\n          return 'Data error';\r\n        }\r\n\r\n        originalArray.forEach(item => {\r\n          const newItem = {\r\n            display_url: item.video_id,\r\n            shortcode: item.author.unique_id,\r\n            thumbnail_resources: item.cover,\r\n            local_image_path: item.cover,\r\n          };\r\n          newArray.push(newItem);\r\n        });\r\n        setTikTokPosts(newArray);\r\n        return newArray;\r\n      } else {\r\n        console.error('getTtPosts:', id);\r\n        return 'Data error';\r\n      }\r\n    } else {\r\n      return response.status;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching TikTok posts:', error);\r\n    return 'Error';\r\n  }\r\n};\r\n\r\nexport default FetchUserTiktokPosts;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;AAEnE,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;AAE7C,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,cAAc,KAAK;EACzD,IAAI;IACFC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;IAEf,MAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACR,OAAO,EAAE;MACxCS,MAAM,EAAE;QACNC,SAAS,EAAEP,EAAE;QACbQ,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MACDC,OAAO,EAAE;QACP,iBAAiB,EAAE,gCAAgC;QACnD,gBAAgB,EAAEb;MACpB;IACF,CAAC,CAAC;IAEF,IAAIO,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,IAAI,GAAGR,QAAQ,CAACS,IAAI;MAE1B,IAAIT,QAAQ,CAACS,IAAI,CAACC,MAAM,EAAE;QACxB,MAAMC,aAAa,GAAGH,IAAI,CAACC,IAAI,CAACC,MAAM;QACtC,IAAIE,QAAQ,GAAG,EAAE;QAEjB,IAAI,CAACD,aAAa,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,EAAE;UACnD,OAAO,YAAY;QACrB;QAEAA,aAAa,CAACI,OAAO,CAACC,IAAI,IAAI;UAC5B,MAAMC,OAAO,GAAG;YACdC,WAAW,EAAEF,IAAI,CAACG,QAAQ;YAC1BC,SAAS,EAAEJ,IAAI,CAACK,MAAM,CAAClB,SAAS;YAChCmB,mBAAmB,EAAEN,IAAI,CAACO,KAAK;YAC/BC,gBAAgB,EAAER,IAAI,CAACO;UACzB,CAAC;UACDX,QAAQ,CAACa,IAAI,CAACR,OAAO,CAAC;QACxB,CAAC,CAAC;QACFpB,cAAc,CAACe,QAAQ,CAAC;QACxB,OAAOA,QAAQ;MACjB,CAAC,MAAM;QACLd,OAAO,CAAC4B,KAAK,CAAC,aAAa,EAAE9B,EAAE,CAAC;QAChC,OAAO,YAAY;MACrB;IACF,CAAC,MAAM;MACL,OAAOI,QAAQ,CAACO,MAAM;IACxB;EACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACd5B,OAAO,CAAC4B,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,OAAO;EAChB;AACF,CAAC;AAACC,EAAA,GAjDIhC,oBAAoB;AAmD1B,eAAeA,oBAAoB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}