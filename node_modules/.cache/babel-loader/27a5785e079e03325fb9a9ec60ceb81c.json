{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst FetchUserTiktokPosts = async (uniqueId, setTikTokPosts) => {\n  console.log(uniqueId);\n  try {\n    const response = await axios.get('https://tiktok-scraper7.p.rapidapi.com/user/posts', {\n      params: {\n        unique_id: uniqueId,\n        count: 9,\n        cursor: 0\n      },\n      headers: {\n        'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com',\n        'x-rapidapi-key': API_KEY\n      }\n    });\n    console.log(response.data); // у axios данные будут в response.data\n    setTikTokPosts(response.data); // если вам нужно обновить состояние\n  } catch (error) {\n    console.error('Error fetching TikTok posts:', error);\n    return 'Error';\n  }\n};\n_c = FetchUserTiktokPosts;\nexport default FetchUserTiktokPosts;\nvar _c;\n$RefreshReg$(_c, \"FetchUserTiktokPosts\");","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_API_KEY","FetchUserTiktokPosts","uniqueId","setTikTokPosts","console","log","response","get","params","unique_id","count","cursor","headers","data","error","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/Api/FetchUserTikTokPosts.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst FetchUserTiktokPosts = async (uniqueId, setTikTokPosts) => {\r\n  console.log(uniqueId);\r\n\r\n  try {\r\n    const response = await axios.get(\r\n      'https://tiktok-scraper7.p.rapidapi.com/user/posts',\r\n      {\r\n        params: {\r\n          unique_id: uniqueId,\r\n          count: 9,\r\n          cursor: 0,\r\n        },\r\n        headers: {\r\n          'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com',\r\n          'x-rapidapi-key': API_KEY,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(response.data); // у axios данные будут в response.data\r\n    setTikTokPosts(response.data); // если вам нужно обновить состояние\r\n  } catch (error) {\r\n    console.error('Error fetching TikTok posts:', error);\r\n    return 'Error';\r\n  }\r\n};\r\n\r\nexport default FetchUserTiktokPosts;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,KAAK;EAC/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EAErB,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,mDAAmD,EACnD;MACEC,MAAM,EAAE;QACNC,SAAS,EAAEP,QAAQ;QACnBQ,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;MACV,CAAC;MACDC,OAAO,EAAE;QACP,iBAAiB,EAAE,gCAAgC;QACnD,gBAAgB,EAAEf;MACpB;IACF,CACF,CAAC;IAEDO,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IAC5BV,cAAc,CAACG,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;EACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,OAAO;EAChB;AACF,CAAC;AAACC,EAAA,GAzBId,oBAAoB;AA2B1B,eAAeA,oBAAoB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}