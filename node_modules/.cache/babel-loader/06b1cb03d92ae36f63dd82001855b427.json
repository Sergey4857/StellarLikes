{"ast":null,"code":"const GetUserIPAndCountry = async () => {\n  try {\n    const response = await fetch('/api_proxy.php?action=GetUserIPAndCountry');\n    const data = await response.json();\n    return {\n      ip: data.ip,\n      country: data.country_code\n    };\n  } catch (error) {\n    console.error('Ошибка при получении IP и страны:', error);\n    return null;\n  }\n};\n_c = GetUserIPAndCountry;\nexport default GetUserIPAndCountry;\nvar _c;\n$RefreshReg$(_c, \"GetUserIPAndCountry\");","map":{"version":3,"names":["GetUserIPAndCountry","response","fetch","data","json","ip","country","country_code","error","console","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/Api/GetUserIpAndCountry.jsx"],"sourcesContent":["const GetUserIPAndCountry = async () => {\r\n  try {\r\n    const response = await fetch('/api_proxy.php?action=GetUserIPAndCountry');\r\n    const data = await response.json();\r\n    return { ip: data.ip, country: data.country_code };\r\n  } catch (error) {\r\n    console.error('Ошибка при получении IP и страны:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetUserIPAndCountry;\r\n"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;IACzE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAO;MAAEC,EAAE,EAAEF,IAAI,CAACE,EAAE;MAAEC,OAAO,EAAEH,IAAI,CAACI;IAAa,CAAC;EACpD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,IAAI;EACb;AACF,CAAC;AAACE,EAAA,GATIV,mBAAmB;AAWzB,eAAeA,mBAAmB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}