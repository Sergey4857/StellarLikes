{"ast":null,"code":"import axios from 'axios';\nconst instagramPostsUrl = process.env.REACT_APP_INSTAGRAM_POSTS_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst FetchUserTiktokPosts = async (id, setTikTokPosts) => {\n  const options = {\n    method: 'GET',\n    url: 'https://tiktok-scraper7.p.rapidapi.com/user/posts',\n    params: {\n      user_id: id,\n      count: '10',\n      cursor: '0'\n    },\n    headers: {\n      'x-rapidapi-key': API_KEY,\n      'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    console.log(response.data);\n    setTikTokPosts(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n  try {\n    const response = await axios.request(options);\n    console.log(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n};\n_c = FetchUserTiktokPosts;\nexport default FetchUserTiktokPosts;\nvar _c;\n$RefreshReg$(_c, \"FetchUserTiktokPosts\");","map":{"version":3,"names":["axios","instagramPostsUrl","process","env","REACT_APP_INSTAGRAM_POSTS_URL","API_KEY","REACT_APP_API_KEY","FetchUserTiktokPosts","id","setTikTokPosts","options","method","url","params","user_id","count","cursor","headers","response","request","console","log","data","error","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/Api/FetchUserTikTokPosts.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst instagramPostsUrl = process.env.REACT_APP_INSTAGRAM_POSTS_URL;\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst FetchUserTiktokPosts = async (id, setTikTokPosts) => {\r\n  const options = {\r\n    method: 'GET',\r\n    url: 'https://tiktok-scraper7.p.rapidapi.com/user/posts',\r\n    params: {\r\n      user_id: id,\r\n      count: '10',\r\n      cursor: '0',\r\n    },\r\n    headers: {\r\n      'x-rapidapi-key': API_KEY,\r\n      'x-rapidapi-host': 'tiktok-scraper7.p.rapidapi.com',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await axios.request(options);\r\n    console.log(response.data);\r\n    setTikTokPosts(response.data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  try {\r\n    const response = await axios.request(options);\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport default FetchUserTiktokPosts;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;AAEnE,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB;AAE7C,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,cAAc,KAAK;EACzD,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,mDAAmD;IACxDC,MAAM,EAAE;MACNC,OAAO,EAAEN,EAAE;MACXO,KAAK,EAAE,IAAI;MACXC,MAAM,EAAE;IACV,CAAC;IACDC,OAAO,EAAE;MACP,gBAAgB,EAAEZ,OAAO;MACzB,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,IAAI;IACF,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,OAAO,CAACT,OAAO,CAAC;IAC7CU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1Bb,cAAc,CAACS,QAAQ,CAACI,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB;EAEA,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,OAAO,CAACT,OAAO,CAAC;IAC7CU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;AAACC,EAAA,GA7BIjB,oBAAoB;AA+B1B,eAAeA,oBAAoB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}