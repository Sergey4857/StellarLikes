{"ast":null,"code":"import axios from 'axios';\nconst baseInstagramUrl = process.env.REACT_APP_BASE_INSTAGRAM_URL;\nconst consumer_key = process.env.REACT_APP_CONSUMER_KEY;\nconst consumer_secret = process.env.REACT_APP_CONSUMER_SECRET;\nconst FetchInstagramLikes = async (setTiktoklikes, setIsLoading, setError) => {\n  try {\n    const response = await axios.get(`${baseInstagramUrl}/wp-json/wc/v3/products?consumer_key=${consumer_key}&consumer_secret=${consumer_secret}`);\n    const TikTokLikesData = response.data.filter(product => product.name === 'Buy Instagram Likes').map(product => product.meta_data);\n    console.log(TikTokLikesData);\n    const result = [];\n\n    // Временные объекты для хранения данных\n    let currentMinQty = null;\n    let currentDiscount = null;\n    let currentOptionSet = {};\n\n    // Проходим по каждому элементу массива\n    TikTokLikesData.forEach(item => {\n      // Обрабатываем данные с min_qty и discount (набор 1)\n      if (item.key.includes('_alg_wc_wholesale_pricing_level_min_qty')) {\n        currentMinQty = item.value; // сохраняем min_qty\n      }\n\n      if (item.key.includes('_alg_wc_wholesale_pricing_level_discount')) {\n        currentDiscount = item.value; // сохраняем discount\n\n        // Добавляем объект в результат для min_qty и discount\n        result.push({\n          min_qty: currentMinQty,\n          discount: currentDiscount\n        });\n\n        // Очищаем временные переменные\n        currentMinQty = null;\n        currentDiscount = null;\n      }\n\n      // Обрабатываем данные с quantity, price и discount (набор 2)\n      const match = item.key.match(/quantity_options_(\\d+)_(\\w+)/);\n      if (match) {\n        const [_, index, key] = match;\n        if (!currentOptionSet[index]) {\n          currentOptionSet[index] = {};\n        }\n\n        // Заполняем объект значениями quantity, price и discount\n        if (key === 'quantity') {\n          currentOptionSet[index].quantity = item.value;\n        } else if (key === 'price') {\n          currentOptionSet[index].price = item.value;\n        } else if (key === 'discount') {\n          currentOptionSet[index].discount = item.value;\n        }\n      }\n    });\n\n    // Переводим результат из quantity_options в массив объектов\n    for (const key in currentOptionSet) {\n      result.push(currentOptionSet[key]);\n    }\n    console.log(result);\n    return result;\n  } catch (error) {\n    д;\n  }\n};\n_c = FetchInstagramLikes;\nexport default FetchInstagramLikes;\nvar _c;\n$RefreshReg$(_c, \"FetchInstagramLikes\");","map":{"version":3,"names":["axios","baseInstagramUrl","process","env","REACT_APP_BASE_INSTAGRAM_URL","consumer_key","REACT_APP_CONSUMER_KEY","consumer_secret","REACT_APP_CONSUMER_SECRET","FetchInstagramLikes","setTiktoklikes","setIsLoading","setError","response","get","TikTokLikesData","data","filter","product","name","map","meta_data","console","log","result","currentMinQty","currentDiscount","currentOptionSet","forEach","item","key","includes","value","push","min_qty","discount","match","_","index","quantity","price","error","д","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/Api/FetchInstagramLikes.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseInstagramUrl = process.env.REACT_APP_BASE_INSTAGRAM_URL;\r\nconst consumer_key = process.env.REACT_APP_CONSUMER_KEY;\r\nconst consumer_secret = process.env.REACT_APP_CONSUMER_SECRET;\r\n\r\nconst FetchInstagramLikes = async (setTiktoklikes, setIsLoading, setError) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${baseInstagramUrl}/wp-json/wc/v3/products?consumer_key=${consumer_key}&consumer_secret=${consumer_secret}`\r\n    );\r\n\r\n    const TikTokLikesData = response.data\r\n      .filter(product => product.name === 'Buy Instagram Likes')\r\n      .map(product => product.meta_data);\r\n\r\n    console.log(TikTokLikesData);\r\n\r\n    const result = [];\r\n\r\n    // Временные объекты для хранения данных\r\n    let currentMinQty = null;\r\n    let currentDiscount = null;\r\n    let currentOptionSet = {};\r\n\r\n    // Проходим по каждому элементу массива\r\n    TikTokLikesData.forEach(item => {\r\n      // Обрабатываем данные с min_qty и discount (набор 1)\r\n      if (item.key.includes('_alg_wc_wholesale_pricing_level_min_qty')) {\r\n        currentMinQty = item.value; // сохраняем min_qty\r\n      }\r\n\r\n      if (item.key.includes('_alg_wc_wholesale_pricing_level_discount')) {\r\n        currentDiscount = item.value; // сохраняем discount\r\n\r\n        // Добавляем объект в результат для min_qty и discount\r\n        result.push({\r\n          min_qty: currentMinQty,\r\n          discount: currentDiscount,\r\n        });\r\n\r\n        // Очищаем временные переменные\r\n        currentMinQty = null;\r\n        currentDiscount = null;\r\n      }\r\n\r\n      // Обрабатываем данные с quantity, price и discount (набор 2)\r\n      const match = item.key.match(/quantity_options_(\\d+)_(\\w+)/);\r\n      if (match) {\r\n        const [_, index, key] = match;\r\n\r\n        if (!currentOptionSet[index]) {\r\n          currentOptionSet[index] = {};\r\n        }\r\n\r\n        // Заполняем объект значениями quantity, price и discount\r\n        if (key === 'quantity') {\r\n          currentOptionSet[index].quantity = item.value;\r\n        } else if (key === 'price') {\r\n          currentOptionSet[index].price = item.value;\r\n        } else if (key === 'discount') {\r\n          currentOptionSet[index].discount = item.value;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Переводим результат из quantity_options в массив объектов\r\n    for (const key in currentOptionSet) {\r\n      result.push(currentOptionSet[key]);\r\n    }\r\n\r\n    console.log(result);\r\n    return result;\r\n  } catch (error) {\r\n    д;\r\n  }\r\n};\r\n\r\nexport default FetchInstagramLikes;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,4BAA4B;AACjE,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB;AACvD,MAAMC,eAAe,GAAGL,OAAO,CAACC,GAAG,CAACK,yBAAyB;AAE7D,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,cAAc,EAAEC,YAAY,EAAEC,QAAQ,KAAK;EAC5E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC7B,GAAEb,gBAAiB,wCAAuCI,YAAa,oBAAmBE,eAAgB,EAC7G,CAAC;IAED,MAAMQ,eAAe,GAAGF,QAAQ,CAACG,IAAI,CAClCC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,qBAAqB,CAAC,CACzDC,GAAG,CAACF,OAAO,IAAIA,OAAO,CAACG,SAAS,CAAC;IAEpCC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;IAE5B,MAAMS,MAAM,GAAG,EAAE;;IAEjB;IACA,IAAIC,aAAa,GAAG,IAAI;IACxB,IAAIC,eAAe,GAAG,IAAI;IAC1B,IAAIC,gBAAgB,GAAG,CAAC,CAAC;;IAEzB;IACAZ,eAAe,CAACa,OAAO,CAACC,IAAI,IAAI;MAC9B;MACA,IAAIA,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,yCAAyC,CAAC,EAAE;QAChEN,aAAa,GAAGI,IAAI,CAACG,KAAK,CAAC,CAAC;MAC9B;;MAEA,IAAIH,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,0CAA0C,CAAC,EAAE;QACjEL,eAAe,GAAGG,IAAI,CAACG,KAAK,CAAC,CAAC;;QAE9B;QACAR,MAAM,CAACS,IAAI,CAAC;UACVC,OAAO,EAAET,aAAa;UACtBU,QAAQ,EAAET;QACZ,CAAC,CAAC;;QAEF;QACAD,aAAa,GAAG,IAAI;QACpBC,eAAe,GAAG,IAAI;MACxB;;MAEA;MACA,MAAMU,KAAK,GAAGP,IAAI,CAACC,GAAG,CAACM,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAIA,KAAK,EAAE;QACT,MAAM,CAACC,CAAC,EAAEC,KAAK,EAAER,GAAG,CAAC,GAAGM,KAAK;QAE7B,IAAI,CAACT,gBAAgB,CAACW,KAAK,CAAC,EAAE;UAC5BX,gBAAgB,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B;;QAEA;QACA,IAAIR,GAAG,KAAK,UAAU,EAAE;UACtBH,gBAAgB,CAACW,KAAK,CAAC,CAACC,QAAQ,GAAGV,IAAI,CAACG,KAAK;QAC/C,CAAC,MAAM,IAAIF,GAAG,KAAK,OAAO,EAAE;UAC1BH,gBAAgB,CAACW,KAAK,CAAC,CAACE,KAAK,GAAGX,IAAI,CAACG,KAAK;QAC5C,CAAC,MAAM,IAAIF,GAAG,KAAK,UAAU,EAAE;UAC7BH,gBAAgB,CAACW,KAAK,CAAC,CAACH,QAAQ,GAAGN,IAAI,CAACG,KAAK;QAC/C;MACF;IACF,CAAC,CAAC;;IAEF;IACA,KAAK,MAAMF,GAAG,IAAIH,gBAAgB,EAAE;MAClCH,MAAM,CAACS,IAAI,CAACN,gBAAgB,CAACG,GAAG,CAAC,CAAC;IACpC;IAEAR,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACdC,CAAC;EACH;AACF,CAAC;AAACC,EAAA,GAtEIlC,mBAAmB;AAwEzB,eAAeA,mBAAmB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}