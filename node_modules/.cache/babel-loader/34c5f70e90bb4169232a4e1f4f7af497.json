{"ast":null,"code":"var _jsxFileName = \"D:\\\\StellarLikes\\\\src\\\\components\\\\BurgerMenu\\\\BurgerMenu.jsx\",\n  _s = $RefreshSig$();\nimport { createPortal } from 'react-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport css from './BurgerMenu.module.css';\nimport { Link } from 'react-router-dom';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BurgerMenu(_ref) {\n  _s();\n  let {\n    setOpenedModal,\n    openedModal\n  } = _ref;\n  const [activeBlockIndex, setActiveBlockIndex] = useState(null);\n  const burgerRoot = document.querySelector('#burger-root');\n  const menuRef = useRef();\n  const contentRef = useRef();\n  const toggleBlock = index => {\n    setActiveBlockIndex(activeBlockIndex === index ? null : index);\n  };\n  useEffect(() => {\n    const tl = gsap.timeline({\n      paused: true\n    });\n    tl.fromTo(menuRef.current, {\n      xPercent: 100\n    }, {\n      xPercent: 0,\n      duration: 0.75,\n      ease: 'power2.out'\n    });\n    if (openedModal) {\n      tl.play();\n    } else {\n      tl.reverse();\n    }\n  }, [openedModal]);\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.BurgerNavWrap,\n    ref: menuRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.BurgerNav,\n      children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.burgerWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${css.blockTitle} ${activeBlockIndex === index ? css.active : ''}`,\n          onClick: () => toggleBlock(index),\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${css.burgerBlock} ${activeBlockIndex === index ? css.open : ''}`,\n          children: item.links.map((link, linkIndex) => /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setOpenedModal(false);\n            },\n            className: css.burgerNavLink,\n            to: link.to,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: css.whiteText,\n              children: link.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: link.highlight === 'Likes' ? css.pinkText : link.highlight === 'Followers' ? css.orangeText : link.highlight === 'Views' ? css.greenText : '',\n              children: link.highlight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, linkIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), burgerRoot);\n}\n_s(BurgerMenu, \"+vvEe1lFp+ygwt38JHYhsRY6JGY=\");\n_c = BurgerMenu;\nvar _c;\n$RefreshReg$(_c, \"BurgerMenu\");","map":{"version":3,"names":["createPortal","useState","useRef","useEffect","css","Link","gsap","jsxDEV","_jsxDEV","BurgerMenu","_ref","_s","setOpenedModal","openedModal","activeBlockIndex","setActiveBlockIndex","burgerRoot","document","querySelector","menuRef","contentRef","toggleBlock","index","tl","timeline","paused","fromTo","current","xPercent","duration","ease","play","reverse","className","BurgerNavWrap","ref","children","BurgerNav","menuItems","map","item","burgerWrapper","blockTitle","active","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","burgerBlock","open","links","link","linkIndex","burgerNavLink","to","whiteText","text","highlight","pinkText","orangeText","greenText","_c","$RefreshReg$"],"sources":["D:/StellarLikes/src/components/BurgerMenu/BurgerMenu.jsx"],"sourcesContent":["import { createPortal } from 'react-dom';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport css from './BurgerMenu.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { gsap } from 'gsap';\r\n\r\nexport default function BurgerMenu({ setOpenedModal, openedModal }) {\r\n  const [activeBlockIndex, setActiveBlockIndex] = useState(null);\r\n  const burgerRoot = document.querySelector('#burger-root');\r\n  const menuRef = useRef();\r\n  const contentRef = useRef();\r\n\r\n  const toggleBlock = index => {\r\n    setActiveBlockIndex(activeBlockIndex === index ? null : index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const tl = gsap.timeline({ paused: true });\r\n\r\n    tl.fromTo(\r\n      menuRef.current,\r\n      { xPercent: 100 },\r\n      { xPercent: 0, duration: 0.75, ease: 'power2.out' }\r\n    );\r\n\r\n    if (openedModal) {\r\n      tl.play();\r\n    } else {\r\n      tl.reverse();\r\n    }\r\n  }, [openedModal]);\r\n\r\n  return createPortal(\r\n    <div className={css.BurgerNavWrap} ref={menuRef}>\r\n      <div className={css.BurgerNav}>\r\n        {menuItems.map((item, index) => (\r\n          <div className={css.burgerWrapper} key={index}>\r\n            <div\r\n              className={`${css.blockTitle} ${\r\n                activeBlockIndex === index ? css.active : ''\r\n              }`}\r\n              onClick={() => toggleBlock(index)}\r\n            >\r\n              {item.title}\r\n            </div>\r\n            <div\r\n              className={`${css.burgerBlock} ${\r\n                activeBlockIndex === index ? css.open : ''\r\n              }`}\r\n            >\r\n              {item.links.map((link, linkIndex) => (\r\n                <Link\r\n                  onClick={() => {\r\n                    setOpenedModal(false);\r\n                  }}\r\n                  key={linkIndex}\r\n                  className={css.burgerNavLink}\r\n                  to={link.to}\r\n                >\r\n                  <span className={css.whiteText}>{link.text}</span>{' '}\r\n                  <span\r\n                    className={\r\n                      link.highlight === 'Likes'\r\n                        ? css.pinkText\r\n                        : link.highlight === 'Followers'\r\n                        ? css.orangeText\r\n                        : link.highlight === 'Views'\r\n                        ? css.greenText\r\n                        : ''\r\n                    }\r\n                  >\r\n                    {link.highlight}\r\n                  </span>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>,\r\n    burgerRoot\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}